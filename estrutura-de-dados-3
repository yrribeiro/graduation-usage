/*   faça um programa que recebe um número (natural, inteiros ou real) no formato de string e escreve por extenso o número lido. 
        Existe a possibilidade dos números fornecidos não ser válido para nenhum desses tipos, caso em que uma mensagem de erro deve ser exibida para o usuário*/
    
    
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

int validNumber (char str[]);
int contNum (char str[]);
void printFunction (char sinal, int inum[]);
void printPonto (char snum[]);
void printDez (int nextDigit);
void printDezena (int digit);
void printCentena (int digit);
void printUnidade (int digit);
void grand (int cont);
void verifDez (int digit, int nextDigit);


int antV=0, depV=0;

int main(){
    char snum[14];
    int i, inum[14];

    printf("[max 13 character-long number]...");
    scanf("%s", snum);
    
    if (validNumber(snum)){
        if (contNum(snum)){
            for (i=1; i<antV; i++){ // theres a signal
                inum[i-1] = (int)snum[i];
            }
            antV--;
            printFunction(snum[0], inum);
        }else{ // theres not a signal
            for (i=0; i<=antV; i++){
                inum[i] = (int)snum[i]; // envia o cod ascii
            }
            printFunction('+', inum);
        }
        (depV>0) ? printPonto(snum) : depV;
        printf("\n");
    }else{
        printf("--invalid number--  try again.\n");
    }
   
    return 0;
}

int validNumber (char str[]){ // 48 to 57 = 0 to 0 | 43 = + | 45 = - | 46 = .
    int onlyDot=0, res=0, i=0;
    while (str[i]!='\0'){
        if (str[i]!=43 && str[i]!=45 && str[i]!=46 && (str[i]<48 || str[i]>57)){
            res=0; break;
        }else if (str[i]==46 && (onlyDot==1 || i==0)){
            res=0; break;
        }else if (str[i]==46 && onlyDot==0){
            onlyDot=1;
        }else res=1;
        i++;
    }
    return res;
}

int contNum (char str[]){ // conta os algarismos antes, depois do ponto e identifica sinal de negativo/positivo
    int i=0, sinal=0;
    while (str[i]!='\0'){
        if (str[i]!='.'){
            antV++;
        }else{
            depV = strlen(str)-1-antV;
            break;
        }
        i++;
    }
    if (str[0]=='-' || str[0]=='+'){
        sinal=1;
    }else sinal=0;
    return sinal;
}

void printFunction (char sinal, int inum[]){ // printa numeros antes do ponto
    int i, cont=1;
    if (sinal=='-'){
        printf("menos ");
    }
    if (antV%3==0){
        if (antV==9){
            cont=1; // centenas de milhoes
            for (i=0; i<=antV-3; i+=3){
                printCentena(inum[i]);
                printf("e ");
                verifDez(inum[i+1], inum[i+2]);
                grand(cont);
                cont++;
            }
        }else if (antV==6){
            cont=2; // centenas de milhares
            for (i=0; i<=antV-3; i+=3){
                printCentena(inum[i]);
                printf("e ");
                verifDez(inum[i+1], inum[i+2]);
                grand(cont);
                cont++;
            }
            printf("\n");
        }else if (antV==3){
            // centenas
            printCentena(inum[0]);
            if (inum[1]+inum[2]!=96){
                printf("e ");
                verifDez(inum[1], inum[2]);
            }
        }
    }else{
        if (antV==2){
            verifDez(inum[0], inum[1]);
        }else if (antV==1){
            printUnidade(inum[0]);
        }else if (antV==5){
            cont=2; // dezenas de milhares
            verifDez(inum[0], inum[1]);
            grand(cont);
            printCentena(inum[2]);
            printf("e ");
            verifDez(inum[3], inum[4]);
        }else if (antV==4){
            cont=2; // unidades de milhar
            printUnidade(inum[0]);
            grand(cont);
            printCentena(inum[1]);
            printf("e ");
            verifDez(inum[2], inum[3]);
        }else if (antV==8){
            cont=1; // dezenas de milhao
            verifDez(inum[0], inum[1]);
            grand(cont);
            cont++;
            for (i=2; i<antV; i+=3){
                printCentena(inum[i]);
                printf("e ");
                verifDez(inum[i+1], inum[i+2]);
                grand(cont);
                cont++;
            }
        }else if (antV==7){
            (inum[0]==49) ? --cont : cont; // unidade de milhao
            printUnidade(inum[0]);
            grand(cont);
            (inum[0]==49) ? cont+=2 : ++cont;
            for (i=1; i<antV; i+=3){
                printCentena(inum[i]);
                printf("e ");
                verifDez(inum[i+1], inum[i+2]);
                grand(cont);
                cont++;
            }
        }
    }
}

void grand (int cont){ // printa a grandeza do numero
    if (cont==0){
        printf("milhao e ");
    }else if (cont==1){
        printf("milhoes e ");
    }else if (cont==2){
        printf("mil e ");
    }
}

void verifDez (int digit, int nextDigit){ // verifica se está entre 10-99 ou 11-19
    if (digit==49){
        if (nextDigit==48){ // = 10
            printDezena(digit);
        }else{ // entre 11 e 19
            printDez(nextDigit);
        }
    }else{
        if (nextDigit==48){ // D0
            printDezena(digit);
        }else{
            printDezena(digit);
            printf("e ");
            printUnidade(nextDigit);
        }
    }
}

void printPonto (char snum[]){
    int index, cont=0;
    index = antV+1;
    if (snum[0]!='+' && snum[0]!='-'){ // não tem sinal
        index = antV+1;
    }else{
        index = antV+2;
    }
    printf("PONTO ");
    while (cont<depV){
        printUnidade(snum[index]);
        index++; cont++;
    }
}

void printUnidade (int digit){
    switch (digit){
        case 48:
            printf("zero ");
            break;
        case 49:
            printf("um ");
            break;
        case 50:
            printf("dois ");
            break;
        case 51:
            printf("tres ");
            break;
        case 52:
            printf("quatro ");
            break;
        case 53:
            printf("cinco ");
            break;
        case 54:
            printf("seis ");
            break;
        case 55:
            printf("sete ");
            break;
        case 56:
            printf("oito ");
            break;
        case 57:
            printf("nove ");
            break;
        default:
            break;
    }
}

void printCentena (int digit){
    switch (digit){
        case 48:
            printf(" ");
            break;
        case 49:
            printf("cento ");
            break;
        case 50:
            printf("duzentos ");
            break;
        case 51:
            printf("trezentos ");
            break;
        case 52:
            printf("quatrocentos ");
            break;
        case 53:
            printf("quinhentos ");
            break;
        case 54:
            printf("seiscentos ");
            break;
        case 55:
            printf("setecentos ");
            break;
        case 56:
            printf("oitocentos ");
            break;
        case 57:
            printf("novecentos ");
            break;
        default:
            break;
    }
}

void printDezena (int digit){
    switch (digit){
        case 48:
            printf(" ");
            break;
        case 49:
            printf("dez ");
            break;
        case 50:
            printf("vinte ");
            break;
        case 51:
            printf("trinta ");
            break;
        case 52:
            printf("quarenta ");
            break;
        case 53:
            printf("cinquenta ");
            break;
        case 54:
            printf("sessenta ");
            break;
        case 55:
            printf("setenta ");
            break;
        case 56:
            printf("oitenta ");
            break;
        case 57:
            printf("noventa ");
            break;
        default:
            break;
    }
}

void printDez (int nextDigit){
    switch (nextDigit){
        case 49:
            printf("onze ");
            break;
        case 50:
            printf("doze ");
            break;
        case 51:
            printf("treze ");
            break;
        case 52:
            printf("catorze ");
            break;
        case 53:
            printf("quinze ");
            break;
        case 54:
            printf("dezesseis ");
            break;
        case 55:
            printf("dezessete ");
            break;
        case 56:
            printf("dezoito ");
            break;
        case 57:
            printf("dezenove ");
            break; 
    }
}
